A Binary Heap is a Complete Binary Tree where items are stored in a special order such that value in a parent node is greater(or smaller) than the values in its two children nodes.

You have to construct a binary heap in this lab and follows the additional rules.

Now, when a new node is inserted in the heap there will be additional cost, and the cost is the summation of those two to be added.
That is, to add 1 and 10, you need a cost of 11. If you want to add 1, 2 and 3. There are several ways:

First way:
1 + 2 = 3, cost = 3
3 + 3 = 6, cost = 6
total cost = 9

Second way:
1 + 3 = 4, cost = 4
2 + 4 = 6, cost = 6
total cost = 10

Third way:
2 + 3 = 5, cost = 5
1 + 5 = 6, cost = 6
total cost = 11

Your mission is to add a set of integers so that the cost is minimal.

Input Format
Each test case will start with a positive number, N (2 ≤ N ≤ 5000) followed by N positive integers(all are less than 100000). Input is terminated by a case where the value of N is zero. This case should not be processed.

Constraints
N (integer): 2 ≤ N ≤ 5000
All of the numbers are less than 100000

Output Format
For each case print the minimum total cost of addition in a single line

Sample Input 0
3
1 2 3
4
1 2 3 4
0

Sample Output 0
9
19